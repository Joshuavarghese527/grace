<!DOCTYPE html>
<!-- saved from url=(0030)http://localhost:3030/events/2 -->
<html lang="en" class="gr__localhost"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <title>Action Controller: Exception caught</title>
  <style>
    body {
      background-color: #FAFAFA;
      color: #333;
      margin: 0px;
    }

    body, p, ol, ul, td {
      font-family: helvetica, verdana, arial, sans-serif;
      font-size:   13px;
      line-height: 18px;
    }

    pre {
      font-size: 11px;
      white-space: pre-wrap;
    }

    pre.box {
      border: 1px solid #EEE;
      padding: 10px;
      margin: 0px;
      width: 958px;
    }

    header {
      color: #F0F0F0;
      background: #C52F24;
      padding: 0.5em 1.5em;
    }

    h1 {
      margin: 0.2em 0;
      line-height: 1.1em;
      font-size: 2em;
    }

    h2 {
      color: #C52F24;
      line-height: 25px;
    }

    .details {
      border: 1px solid #D0D0D0;
      border-radius: 4px;
      margin: 1em 0px;
      display: block;
      width: 978px;
    }

    .summary {
      padding: 8px 15px;
      border-bottom: 1px solid #D0D0D0;
      display: block;
    }

    .details pre {
      margin: 5px;
      border: none;
    }

    #container {
      box-sizing: border-box;
      width: 100%;
      padding: 0 1.5em;
    }

    .source * {
      margin: 0px;
      padding: 0px;
    }

    .source {
      border: 1px solid #D9D9D9;
      background: #ECECEC;
      width: 978px;
    }

    .source pre {
      padding: 10px 0px;
      border: none;
    }

    .source .data {
      font-size: 80%;
      overflow: auto;
      background-color: #FFF;
    }

    .info {
      padding: 0.5em;
    }

    .source .data .line_numbers {
      background-color: #ECECEC;
      color: #AAA;
      padding: 1em .5em;
      border-right: 1px solid #DDD;
      text-align: right;
    }

    .line {
      padding-left: 10px;
    }

    .line:hover {
      background-color: #F6F6F6;
    }

    .line.active {
      background-color: #FFCCCC;
    }

    .hidden {
      display: none;
    }

    a { color: #980905; }
    a:visited { color: #666; }
    a.trace-frames { color: #666; }
    a:hover { color: #C52F24; }
    a.trace-frames.selected { color: #C52F24 }

    
  </style>

  <script>
    var toggle = function(id) {
      var s = document.getElementById(id).style;
      s.display = s.display == 'none' ? 'block' : 'none';
      return false;
    }
    var show = function(id) {
      document.getElementById(id).style.display = 'block';
    }
    var hide = function(id) {
      document.getElementById(id).style.display = 'none';
    }
    var toggleTrace = function() {
      return toggle('blame_trace');
    }
    var toggleSessionDump = function() {
      return toggle('session_dump');
    }
    var toggleEnvDump = function() {
      return toggle('env_dump');
    }
  </script>
</head>
<body data-gr-c-s-loaded="true">

<header>
  <h1>
    URI::InvalidURIError
      in EventsController#destroy
  </h1>
</header>

<div id="container">
  <h2>bad URI(is not URI?): https://s3.US East (N. Virginia).amazonaws.com</h2>

      <div class="source hidden" id="frame-source-0">
      <div class="info">
        Extracted source (around line <strong>#67</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>65</span>
<span>66</span>
<span>67</span>
<span>68</span>
<span>69</span>
<span>70</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        ]
</div><div class="line">      else
</div><div class="line active">        raise InvalidURIError, "bad URI(is not URI?): #{uri}"
</div><div class="line">      end
</div><div class="line">    end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-1">
      <div class="info">
        Extracted source (around line <strong>#73</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>71</span>
<span>72</span>
<span>73</span>
<span>74</span>
<span>75</span>
<span>76</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    def parse(uri) # :nodoc:
</div><div class="line">      scheme, userinfo, host, port,
</div><div class="line active">        registry, path, opaque, query, fragment = self.split(uri)
</div><div class="line">      scheme_list = URI.scheme_list
</div><div class="line">      if scheme &amp;&amp; scheme_list.include?(uc = scheme.upcase)
</div><div class="line">        scheme_list[uc].new(scheme, userinfo, host, port,
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-2">
      <div class="info">
        Extracted source (around line <strong>#227</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>225</span>
<span>226</span>
<span>227</span>
<span>228</span>
<span>229</span>
<span>230</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">  #
</div><div class="line">  def self.parse(uri)
</div><div class="line active">    RFC3986_PARSER.parse(uri)
</div><div class="line">  end
</div><div class="line">
</div><div class="line">  #
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-3">
      <div class="info">
        Extracted source (around line <strong>#28</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>26</span>
<span>27</span>
<span>28</span>
<span>29</span>
<span>30</span>
<span>31</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          end
</div><div class="line">
</div><div class="line active">          endpoint = URI.parse(endpoint.to_s)
</div><div class="line">          if URI::HTTPS === endpoint or URI::HTTP === endpoint
</div><div class="line">            client.config.endpoint = endpoint
</div><div class="line">          else
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-4">
      <div class="info">
        Extracted source (around line <strong>#84</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>82</span>
<span>83</span>
<span>84</span>
<span>85</span>
<span>86</span>
<span>87</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      def after_initialize(plugins)
</div><div class="line">        plugins.reverse.each do |plugin|
</div><div class="line active">          plugin.after_initialize(self) if plugin.respond_to?(:after_initialize)
</div><div class="line">        end
</div><div class="line">      end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-5">
      <div class="info">
        Extracted source (around line <strong>#83</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>81</span>
<span>82</span>
<span>83</span>
<span>84</span>
<span>85</span>
<span>86</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      # Gives each plugin the opportunity to modify this client.
</div><div class="line">      def after_initialize(plugins)
</div><div class="line active">        plugins.reverse.each do |plugin|
</div><div class="line">          plugin.after_initialize(self) if plugin.respond_to?(:after_initialize)
</div><div class="line">        end
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-6">
      <div class="info">
        Extracted source (around line <strong>#83</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>81</span>
<span>82</span>
<span>83</span>
<span>84</span>
<span>85</span>
<span>86</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      # Gives each plugin the opportunity to modify this client.
</div><div class="line">      def after_initialize(plugins)
</div><div class="line active">        plugins.reverse.each do |plugin|
</div><div class="line">          plugin.after_initialize(self) if plugin.respond_to?(:after_initialize)
</div><div class="line">        end
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-7">
      <div class="info">
        Extracted source (around line <strong>#21</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>19</span>
<span>20</span>
<span>21</span>
<span>22</span>
<span>23</span>
<span>24</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        @config = build_config(plugins, options)
</div><div class="line">        @handlers = build_handler_list(plugins)
</div><div class="line active">        after_initialize(plugins)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      # @return [Configuration&lt;Struct&gt;]
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-8">
      <div class="info">
        Extracted source (around line <strong>#105</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>103</span>
<span>104</span>
<span>105</span>
<span>106</span>
<span>107</span>
<span>108</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          before_initialize(plugins, options)
</div><div class="line">          client = allocate
</div><div class="line active">          client.send(:initialize, plugins, options)
</div><div class="line">          client
</div><div class="line">        end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-9">
      <div class="info">
        Extracted source (around line <strong>#169</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>167</span>
<span>168</span>
<span>169</span>
<span>170</span>
<span>171</span>
<span>172</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          options[:client]
</div><div class="line">        else
</div><div class="line active">          self.class.client_class.new(options.merge(
</div><div class="line">            user_agent_suffix: "resources"
</div><div class="line">          ))
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-10">
      <div class="info">
        Extracted source (around line <strong>#15</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>13</span>
<span>14</span>
<span>15</span>
<span>16</span>
<span>17</span>
<span>18</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        @identifiers = extract_identifiers(args, options)
</div><div class="line">        @data = options.delete(:data)
</div><div class="line active">        @client = extract_client(options)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      # Marked private to prevent double documentation
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-11">
      <div class="info">
        Extracted source (around line <strong>#247</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>245</span>
<span>246</span>
<span>247</span>
<span>248</span>
<span>249</span>
<span>250</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      def obtain_s3_instance_for(options)
</div><div class="line">        instances = (Thread.current[:paperclip_s3_instances] ||= {})
</div><div class="line active">        instances[options] ||= ::Aws::S3::Resource.new(options)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      def s3_bucket
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-12">
      <div class="info">
        Extracted source (around line <strong>#247</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>245</span>
<span>246</span>
<span>247</span>
<span>248</span>
<span>249</span>
<span>250</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      def obtain_s3_instance_for(options)
</div><div class="line">        instances = (Thread.current[:paperclip_s3_instances] ||= {})
</div><div class="line active">        instances[options] ||= ::Aws::S3::Resource.new(options)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      def s3_bucket
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-13">
      <div class="info">
        Extracted source (around line <strong>#241</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>239</span>
<span>240</span>
<span>241</span>
<span>242</span>
<span>243</span>
<span>244</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          end
</div><div class="line">
</div><div class="line active">          obtain_s3_instance_for(config.merge(@s3_options))
</div><div class="line">        end
</div><div class="line">      end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-14">
      <div class="info">
        Extracted source (around line <strong>#251</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>249</span>
<span>250</span>
<span>251</span>
<span>252</span>
<span>253</span>
<span>254</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">      def s3_bucket
</div><div class="line active">        @s3_bucket ||= s3_interface.bucket(bucket_name)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      def style_name_as_path(style_name)
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-15">
      <div class="info">
        Extracted source (around line <strong>#259</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>257</span>
<span>258</span>
<span>259</span>
<span>260</span>
<span>261</span>
<span>262</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">      def s3_object style_name = default_style
</div><div class="line active">        s3_bucket.object style_name_as_path(style_name)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      def using_http_proxy?
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-16">
      <div class="info">
        Extracted source (around line <strong>#300</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>298</span>
<span>299</span>
<span>300</span>
<span>301</span>
<span>302</span>
<span>303</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      def exists?(style = default_style)
</div><div class="line">        if original_filename
</div><div class="line active">          s3_object(style).exists?
</div><div class="line">        else
</div><div class="line">          false
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-17">
      <div class="info">
        Extracted source (around line <strong>#560</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>558</span>
<span>559</span>
<span>560</span>
<span>561</span>
<span>562</span>
<span>563</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      unless @options[:preserve_files]
</div><div class="line">        @queued_for_delete += [:original, *styles.keys].uniq.map do |style|
</div><div class="line active">          path(style) if exists?(style)
</div><div class="line">        end.compact
</div><div class="line">      end
</div><div class="line">      instance_write(:file_name, nil)
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-18">
      <div class="info">
        Extracted source (around line <strong>#559</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>557</span>
<span>558</span>
<span>559</span>
<span>560</span>
<span>561</span>
<span>562</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      return if !file?
</div><div class="line">      unless @options[:preserve_files]
</div><div class="line active">        @queued_for_delete += [:original, *styles.keys].uniq.map do |style|
</div><div class="line">          path(style) if exists?(style)
</div><div class="line">        end.compact
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-19">
      <div class="info">
        Extracted source (around line <strong>#559</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>557</span>
<span>558</span>
<span>559</span>
<span>560</span>
<span>561</span>
<span>562</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      return if !file?
</div><div class="line">      unless @options[:preserve_files]
</div><div class="line active">        @queued_for_delete += [:original, *styles.keys].uniq.map do |style|
</div><div class="line">          path(style) if exists?(style)
</div><div class="line">        end.compact
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-20">
      <div class="info">
        Extracted source (around line <strong>#93</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>91</span>
<span>92</span>
<span>93</span>
<span>94</span>
<span>95</span>
<span>96</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      name = @name
</div><div class="line">      @klass.send(:after_save) { send(name).send(:save) }
</div><div class="line active">      @klass.send(:before_destroy) { send(name).send(:queue_all_for_delete) }
</div><div class="line">      if @klass.respond_to?(:after_commit)
</div><div class="line">        @klass.send(:after_commit, on: :destroy) do
</div><div class="line">          send(name).send(:flush_deletes)
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-21">
      <div class="info">
        Extracted source (around line <strong>#396</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>394</span>
<span>395</span>
<span>396</span>
<span>397</span>
<span>398</span>
<span>399</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">          if filter.arity &lt;= 0
</div><div class="line active">            lambda { |target, _| target.instance_exec(&amp;filter) }
</div><div class="line">          else
</div><div class="line">            lambda { |target, _| target.instance_exec(target, &amp;filter) }
</div><div class="line">          end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-22">
      <div class="info">
        Extracted source (around line <strong>#396</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>394</span>
<span>395</span>
<span>396</span>
<span>397</span>
<span>398</span>
<span>399</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">          if filter.arity &lt;= 0
</div><div class="line active">            lambda { |target, _| target.instance_exec(&amp;filter) }
</div><div class="line">          else
</div><div class="line">            lambda { |target, _| target.instance_exec(target, &amp;filter) }
</div><div class="line">          end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-23">
      <div class="info">
        Extracted source (around line <strong>#169</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>167</span>
<span>168</span>
<span>169</span>
<span>170</span>
<span>171</span>
<span>172</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">            unless halted
</div><div class="line active">              result_lambda = -&gt; { user_callback.call target, value }
</div><div class="line">              env.halted = halted_lambda.call(target, result_lambda)
</div><div class="line">
</div><div class="line">              if env.halted
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-24">
      <div class="info">
        Extracted source (around line <strong>#770</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>768</span>
<span>769</span>
<span>770</span>
<span>771</span>
<span>772</span>
<span>773</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          terminate = true
</div><div class="line">          catch(:abort) do
</div><div class="line active">            result = result_lambda.call if result_lambda.is_a?(Proc)
</div><div class="line">            if Callbacks.halt_and_display_warning_on_return_false &amp;&amp; result == false
</div><div class="line">              display_deprecation_warning_for_false_terminator
</div><div class="line">            else
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-25">
      <div class="info">
        Extracted source (around line <strong>#769</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>767</span>
<span>768</span>
<span>769</span>
<span>770</span>
<span>771</span>
<span>772</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        Proc.new do |target, result_lambda|
</div><div class="line">          terminate = true
</div><div class="line active">          catch(:abort) do
</div><div class="line">            result = result_lambda.call if result_lambda.is_a?(Proc)
</div><div class="line">            if Callbacks.halt_and_display_warning_on_return_false &amp;&amp; result == false
</div><div class="line">              display_deprecation_warning_for_false_terminator
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-26">
      <div class="info">
        Extracted source (around line <strong>#769</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>767</span>
<span>768</span>
<span>769</span>
<span>770</span>
<span>771</span>
<span>772</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        Proc.new do |target, result_lambda|
</div><div class="line">          terminate = true
</div><div class="line active">          catch(:abort) do
</div><div class="line">            result = result_lambda.call if result_lambda.is_a?(Proc)
</div><div class="line">            if Callbacks.halt_and_display_warning_on_return_false &amp;&amp; result == false
</div><div class="line">              display_deprecation_warning_for_false_terminator
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-27">
      <div class="info">
        Extracted source (around line <strong>#170</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>168</span>
<span>169</span>
<span>170</span>
<span>171</span>
<span>172</span>
<span>173</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">            unless halted
</div><div class="line">              result_lambda = -&gt; { user_callback.call target, value }
</div><div class="line active">              env.halted = halted_lambda.call(target, result_lambda)
</div><div class="line">
</div><div class="line">              if env.halted
</div><div class="line">                target.send :halted_callback_hook, filter
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-28">
      <div class="info">
        Extracted source (around line <strong>#454</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>452</span>
<span>453</span>
<span>454</span>
<span>455</span>
<span>456</span>
<span>457</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">      def call(arg)
</div><div class="line active">        @before.each { |b| b.call(arg) }
</div><div class="line">        value = @call.call(arg)
</div><div class="line">        @after.each { |a| a.call(arg) }
</div><div class="line">        value
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-29">
      <div class="info">
        Extracted source (around line <strong>#454</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>452</span>
<span>453</span>
<span>454</span>
<span>455</span>
<span>456</span>
<span>457</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">      def call(arg)
</div><div class="line active">        @before.each { |b| b.call(arg) }
</div><div class="line">        value = @call.call(arg)
</div><div class="line">        @after.each { |a| a.call(arg) }
</div><div class="line">        value
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-30">
      <div class="info">
        Extracted source (around line <strong>#454</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>452</span>
<span>453</span>
<span>454</span>
<span>455</span>
<span>456</span>
<span>457</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">      def call(arg)
</div><div class="line active">        @before.each { |b| b.call(arg) }
</div><div class="line">        value = @call.call(arg)
</div><div class="line">        @after.each { |a| a.call(arg) }
</div><div class="line">        value
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-31">
      <div class="info">
        Extracted source (around line <strong>#101</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>99</span>
<span>100</span>
<span>101</span>
<span>102</span>
<span>103</span>
<span>104</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        runner = callbacks.compile
</div><div class="line">        e = Filters::Environment.new(self, false, nil, block)
</div><div class="line active">        runner.call(e).value
</div><div class="line">      end
</div><div class="line">    end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-32">
      <div class="info">
        Extracted source (around line <strong>#750</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>748</span>
<span>749</span>
<span>750</span>
<span>751</span>
<span>752</span>
<span>753</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          module_eval &lt;&lt;-RUBY, __FILE__, __LINE__ + 1
</div><div class="line">            def _run_#{name}_callbacks(&amp;block)
</div><div class="line active">              __run_callbacks__(_#{name}_callbacks, &amp;block)
</div><div class="line">            end
</div><div class="line">          RUBY
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-33">
      <div class="info">
        Extracted source (around line <strong>#283</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>281</span>
<span>282</span>
<span>283</span>
<span>284</span>
<span>285</span>
<span>286</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      return if @_destroy_callback_already_called
</div><div class="line">      @_destroy_callback_already_called = true
</div><div class="line active">      _run_destroy_callbacks { super }
</div><div class="line">    rescue RecordNotDestroyed =&gt; e
</div><div class="line">      @_association_destroy_exception = e
</div><div class="line">      false
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-34">
      <div class="info">
        Extracted source (around line <strong>#314</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>312</span>
<span>313</span>
<span>314</span>
<span>315</span>
<span>316</span>
<span>317</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">    def destroy #:nodoc:
</div><div class="line active">      with_transaction_returning_status { super }
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def save(*) #:nodoc:
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-35">
      <div class="info">
        Extracted source (around line <strong>#395</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>393</span>
<span>394</span>
<span>395</span>
<span>396</span>
<span>397</span>
<span>398</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        add_to_transaction
</div><div class="line">        begin
</div><div class="line active">          status = yield
</div><div class="line">        rescue ActiveRecord::Rollback
</div><div class="line">          clear_transaction_record_state
</div><div class="line">          status = nil
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-36">
      <div class="info">
        Extracted source (around line <strong>#230</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>228</span>
<span>229</span>
<span>230</span>
<span>231</span>
<span>232</span>
<span>233</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">            raise ActiveRecord::TransactionIsolationError, "cannot set isolation when joining a transaction"
</div><div class="line">          end
</div><div class="line active">          yield
</div><div class="line">        else
</div><div class="line">          transaction_manager.within_new_transaction(isolation: isolation, joinable: joinable) { yield }
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-37">
      <div class="info">
        Extracted source (around line <strong>#211</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>209</span>
<span>210</span>
<span>211</span>
<span>212</span>
<span>213</span>
<span>214</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      # See the ConnectionAdapters::DatabaseStatements#transaction API docs.
</div><div class="line">      def transaction(options = {}, &amp;block)
</div><div class="line active">        connection.transaction(options, &amp;block)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      def before_commit(*args, &amp;block) # :nodoc:
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-38">
      <div class="info">
        Extracted source (around line <strong>#392</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>390</span>
<span>391</span>
<span>392</span>
<span>393</span>
<span>394</span>
<span>395</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    def with_transaction_returning_status
</div><div class="line">      status = nil
</div><div class="line active">      self.class.transaction do
</div><div class="line">        add_to_transaction
</div><div class="line">        begin
</div><div class="line">          status = yield
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-39">
      <div class="info">
        Extracted source (around line <strong>#314</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>312</span>
<span>313</span>
<span>314</span>
<span>315</span>
<span>316</span>
<span>317</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">    def destroy #:nodoc:
</div><div class="line active">      with_transaction_returning_status { super }
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def save(*) #:nodoc:
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-40">
      <div class="info">
        Extracted source (around line <strong>#197</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>195</span>
<span>196</span>
<span>197</span>
<span>198</span>
<span>199</span>
<span>200</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    # See ActiveRecord::Callbacks for further details.
</div><div class="line">    def destroy!
</div><div class="line active">      destroy || _raise_record_not_destroyed
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # Returns an instance of the specified +klass+ with the attributes of the
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-41">
      <div class="info">
        Extracted source (around line <strong>#120</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>118</span>
<span>119</span>
<span>120</span>
<span>121</span>
<span>122</span>
<span>123</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        def delete_records(records, method)
</div><div class="line">          if method == :destroy
</div><div class="line active">            records.each(&amp;:destroy!)
</div><div class="line">            update_counter(-records.length) unless reflection.inverse_updates_counter_cache?
</div><div class="line">          else
</div><div class="line">            scope = self.scope.where(reflection.klass.primary_key =&gt; records)
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-42">
      <div class="info">
        Extracted source (around line <strong>#120</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>118</span>
<span>119</span>
<span>120</span>
<span>121</span>
<span>122</span>
<span>123</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        def delete_records(records, method)
</div><div class="line">          if method == :destroy
</div><div class="line active">            records.each(&amp;:destroy!)
</div><div class="line">            update_counter(-records.length) unless reflection.inverse_updates_counter_cache?
</div><div class="line">          else
</div><div class="line">            scope = self.scope.where(reflection.klass.primary_key =&gt; records)
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-43">
      <div class="info">
        Extracted source (around line <strong>#561</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>559</span>
<span>560</span>
<span>561</span>
<span>562</span>
<span>563</span>
<span>564</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          records.each { |record| callback(:before_remove, record) }
</div><div class="line">
</div><div class="line active">          delete_records(existing_records, method) if existing_records.any?
</div><div class="line">          records.each { |record| target.delete(record) }
</div><div class="line">
</div><div class="line">          records.each { |record| callback(:after_remove, record) }
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-44">
      <div class="info">
        Extracted source (around line <strong>#554</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>552</span>
<span>553</span>
<span>554</span>
<span>555</span>
<span>556</span>
<span>557</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">            remove_records(existing_records, records, method)
</div><div class="line">          else
</div><div class="line active">            transaction { remove_records(existing_records, records, method) }
</div><div class="line">          end
</div><div class="line">        end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-45">
      <div class="info">
        Extracted source (around line <strong>#207</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>205</span>
<span>206</span>
<span>207</span>
<span>208</span>
<span>209</span>
<span>210</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      def transaction(*args)
</div><div class="line">        reflection.klass.transaction(*args) do
</div><div class="line active">          yield
</div><div class="line">        end
</div><div class="line">      end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-46">
      <div class="info">
        Extracted source (around line <strong>#230</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>228</span>
<span>229</span>
<span>230</span>
<span>231</span>
<span>232</span>
<span>233</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">            raise ActiveRecord::TransactionIsolationError, "cannot set isolation when joining a transaction"
</div><div class="line">          end
</div><div class="line active">          yield
</div><div class="line">        else
</div><div class="line">          transaction_manager.within_new_transaction(isolation: isolation, joinable: joinable) { yield }
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-47">
      <div class="info">
        Extracted source (around line <strong>#211</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>209</span>
<span>210</span>
<span>211</span>
<span>212</span>
<span>213</span>
<span>214</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      # See the ConnectionAdapters::DatabaseStatements#transaction API docs.
</div><div class="line">      def transaction(options = {}, &amp;block)
</div><div class="line active">        connection.transaction(options, &amp;block)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      def before_commit(*args, &amp;block) # :nodoc:
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-48">
      <div class="info">
        Extracted source (around line <strong>#206</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>204</span>
<span>205</span>
<span>206</span>
<span>207</span>
<span>208</span>
<span>209</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      #   end
</div><div class="line">      def transaction(*args)
</div><div class="line active">        reflection.klass.transaction(*args) do
</div><div class="line">          yield
</div><div class="line">        end
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-49">
      <div class="info">
        Extracted source (around line <strong>#554</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>552</span>
<span>553</span>
<span>554</span>
<span>555</span>
<span>556</span>
<span>557</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">            remove_records(existing_records, records, method)
</div><div class="line">          else
</div><div class="line active">            transaction { remove_records(existing_records, records, method) }
</div><div class="line">          end
</div><div class="line">        end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-50">
      <div class="info">
        Extracted source (around line <strong>#299</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>297</span>
<span>298</span>
<span>299</span>
<span>300</span>
<span>301</span>
<span>302</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        return if records.empty?
</div><div class="line">        records = find(records) if records.any? { |record| record.kind_of?(Integer) || record.kind_of?(String) }
</div><div class="line active">        delete_or_destroy(records, :destroy)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      # Returns the size of the collection by executing a SELECT COUNT(*)
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-51">
      <div class="info">
        Extracted source (around line <strong>#247</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>245</span>
<span>246</span>
<span>247</span>
<span>248</span>
<span>249</span>
<span>250</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      # See destroy for more info.
</div><div class="line">      def destroy_all
</div><div class="line active">        destroy(load_target).tap do
</div><div class="line">          reset
</div><div class="line">          loaded!
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-52">
      <div class="info">
        Extracted source (around line <strong>#34</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>32</span>
<span>33</span>
<span>34</span>
<span>35</span>
<span>36</span>
<span>37</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">            # No point in executing the counter update since we're going to destroy the parent anyway
</div><div class="line">            load_target.each { |t| t.destroyed_by_association = reflection }
</div><div class="line active">            destroy_all
</div><div class="line">          else
</div><div class="line">            delete_all
</div><div class="line">          end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-53">
      <div class="info">
        Extracted source (around line <strong>#140</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>138</span>
<span>139</span>
<span>140</span>
<span>141</span>
<span>142</span>
<span>143</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    def self.add_destroy_callbacks(model, reflection)
</div><div class="line">      name = reflection.name
</div><div class="line active">      model.before_destroy lambda { |o| o.association(name).handle_dependency }
</div><div class="line">    end
</div><div class="line">  end
</div><div class="line">end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-54">
      <div class="info">
        Extracted source (around line <strong>#398</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>396</span>
<span>397</span>
<span>398</span>
<span>399</span>
<span>400</span>
<span>401</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">            lambda { |target, _| target.instance_exec(&amp;filter) }
</div><div class="line">          else
</div><div class="line active">            lambda { |target, _| target.instance_exec(target, &amp;filter) }
</div><div class="line">          end
</div><div class="line">        else
</div><div class="line">          scopes = Array(chain_config[:scope])
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-55">
      <div class="info">
        Extracted source (around line <strong>#398</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>396</span>
<span>397</span>
<span>398</span>
<span>399</span>
<span>400</span>
<span>401</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">            lambda { |target, _| target.instance_exec(&amp;filter) }
</div><div class="line">          else
</div><div class="line active">            lambda { |target, _| target.instance_exec(target, &amp;filter) }
</div><div class="line">          end
</div><div class="line">        else
</div><div class="line">          scopes = Array(chain_config[:scope])
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-56">
      <div class="info">
        Extracted source (around line <strong>#169</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>167</span>
<span>168</span>
<span>169</span>
<span>170</span>
<span>171</span>
<span>172</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">            unless halted
</div><div class="line active">              result_lambda = -&gt; { user_callback.call target, value }
</div><div class="line">              env.halted = halted_lambda.call(target, result_lambda)
</div><div class="line">
</div><div class="line">              if env.halted
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-57">
      <div class="info">
        Extracted source (around line <strong>#770</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>768</span>
<span>769</span>
<span>770</span>
<span>771</span>
<span>772</span>
<span>773</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          terminate = true
</div><div class="line">          catch(:abort) do
</div><div class="line active">            result = result_lambda.call if result_lambda.is_a?(Proc)
</div><div class="line">            if Callbacks.halt_and_display_warning_on_return_false &amp;&amp; result == false
</div><div class="line">              display_deprecation_warning_for_false_terminator
</div><div class="line">            else
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-58">
      <div class="info">
        Extracted source (around line <strong>#769</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>767</span>
<span>768</span>
<span>769</span>
<span>770</span>
<span>771</span>
<span>772</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        Proc.new do |target, result_lambda|
</div><div class="line">          terminate = true
</div><div class="line active">          catch(:abort) do
</div><div class="line">            result = result_lambda.call if result_lambda.is_a?(Proc)
</div><div class="line">            if Callbacks.halt_and_display_warning_on_return_false &amp;&amp; result == false
</div><div class="line">              display_deprecation_warning_for_false_terminator
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-59">
      <div class="info">
        Extracted source (around line <strong>#769</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>767</span>
<span>768</span>
<span>769</span>
<span>770</span>
<span>771</span>
<span>772</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        Proc.new do |target, result_lambda|
</div><div class="line">          terminate = true
</div><div class="line active">          catch(:abort) do
</div><div class="line">            result = result_lambda.call if result_lambda.is_a?(Proc)
</div><div class="line">            if Callbacks.halt_and_display_warning_on_return_false &amp;&amp; result == false
</div><div class="line">              display_deprecation_warning_for_false_terminator
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-60">
      <div class="info">
        Extracted source (around line <strong>#170</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>168</span>
<span>169</span>
<span>170</span>
<span>171</span>
<span>172</span>
<span>173</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">            unless halted
</div><div class="line">              result_lambda = -&gt; { user_callback.call target, value }
</div><div class="line active">              env.halted = halted_lambda.call(target, result_lambda)
</div><div class="line">
</div><div class="line">              if env.halted
</div><div class="line">                target.send :halted_callback_hook, filter
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-61">
      <div class="info">
        Extracted source (around line <strong>#454</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>452</span>
<span>453</span>
<span>454</span>
<span>455</span>
<span>456</span>
<span>457</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">      def call(arg)
</div><div class="line active">        @before.each { |b| b.call(arg) }
</div><div class="line">        value = @call.call(arg)
</div><div class="line">        @after.each { |a| a.call(arg) }
</div><div class="line">        value
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-62">
      <div class="info">
        Extracted source (around line <strong>#454</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>452</span>
<span>453</span>
<span>454</span>
<span>455</span>
<span>456</span>
<span>457</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">      def call(arg)
</div><div class="line active">        @before.each { |b| b.call(arg) }
</div><div class="line">        value = @call.call(arg)
</div><div class="line">        @after.each { |a| a.call(arg) }
</div><div class="line">        value
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-63">
      <div class="info">
        Extracted source (around line <strong>#454</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>452</span>
<span>453</span>
<span>454</span>
<span>455</span>
<span>456</span>
<span>457</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">      def call(arg)
</div><div class="line active">        @before.each { |b| b.call(arg) }
</div><div class="line">        value = @call.call(arg)
</div><div class="line">        @after.each { |a| a.call(arg) }
</div><div class="line">        value
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-64">
      <div class="info">
        Extracted source (around line <strong>#101</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>99</span>
<span>100</span>
<span>101</span>
<span>102</span>
<span>103</span>
<span>104</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        runner = callbacks.compile
</div><div class="line">        e = Filters::Environment.new(self, false, nil, block)
</div><div class="line active">        runner.call(e).value
</div><div class="line">      end
</div><div class="line">    end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-65">
      <div class="info">
        Extracted source (around line <strong>#750</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>748</span>
<span>749</span>
<span>750</span>
<span>751</span>
<span>752</span>
<span>753</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          module_eval &lt;&lt;-RUBY, __FILE__, __LINE__ + 1
</div><div class="line">            def _run_#{name}_callbacks(&amp;block)
</div><div class="line active">              __run_callbacks__(_#{name}_callbacks, &amp;block)
</div><div class="line">            end
</div><div class="line">          RUBY
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-66">
      <div class="info">
        Extracted source (around line <strong>#283</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>281</span>
<span>282</span>
<span>283</span>
<span>284</span>
<span>285</span>
<span>286</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      return if @_destroy_callback_already_called
</div><div class="line">      @_destroy_callback_already_called = true
</div><div class="line active">      _run_destroy_callbacks { super }
</div><div class="line">    rescue RecordNotDestroyed =&gt; e
</div><div class="line">      @_association_destroy_exception = e
</div><div class="line">      false
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-67">
      <div class="info">
        Extracted source (around line <strong>#314</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>312</span>
<span>313</span>
<span>314</span>
<span>315</span>
<span>316</span>
<span>317</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">    def destroy #:nodoc:
</div><div class="line active">      with_transaction_returning_status { super }
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def save(*) #:nodoc:
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-68">
      <div class="info">
        Extracted source (around line <strong>#395</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>393</span>
<span>394</span>
<span>395</span>
<span>396</span>
<span>397</span>
<span>398</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        add_to_transaction
</div><div class="line">        begin
</div><div class="line active">          status = yield
</div><div class="line">        rescue ActiveRecord::Rollback
</div><div class="line">          clear_transaction_record_state
</div><div class="line">          status = nil
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-69">
      <div class="info">
        Extracted source (around line <strong>#232</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>230</span>
<span>231</span>
<span>232</span>
<span>233</span>
<span>234</span>
<span>235</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          yield
</div><div class="line">        else
</div><div class="line active">          transaction_manager.within_new_transaction(isolation: isolation, joinable: joinable) { yield }
</div><div class="line">        end
</div><div class="line">      rescue ActiveRecord::Rollback
</div><div class="line">        # rollbacks are silently swallowed
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-70">
      <div class="info">
        Extracted source (around line <strong>#189</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>187</span>
<span>188</span>
<span>189</span>
<span>190</span>
<span>191</span>
<span>192</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      def within_new_transaction(options = {})
</div><div class="line">        transaction = begin_transaction options
</div><div class="line active">        yield
</div><div class="line">      rescue Exception =&gt; error
</div><div class="line">        if transaction
</div><div class="line">          rollback_transaction
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-71">
      <div class="info">
        Extracted source (around line <strong>#232</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>230</span>
<span>231</span>
<span>232</span>
<span>233</span>
<span>234</span>
<span>235</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          yield
</div><div class="line">        else
</div><div class="line active">          transaction_manager.within_new_transaction(isolation: isolation, joinable: joinable) { yield }
</div><div class="line">        end
</div><div class="line">      rescue ActiveRecord::Rollback
</div><div class="line">        # rollbacks are silently swallowed
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-72">
      <div class="info">
        Extracted source (around line <strong>#211</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>209</span>
<span>210</span>
<span>211</span>
<span>212</span>
<span>213</span>
<span>214</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      # See the ConnectionAdapters::DatabaseStatements#transaction API docs.
</div><div class="line">      def transaction(options = {}, &amp;block)
</div><div class="line active">        connection.transaction(options, &amp;block)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      def before_commit(*args, &amp;block) # :nodoc:
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-73">
      <div class="info">
        Extracted source (around line <strong>#392</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>390</span>
<span>391</span>
<span>392</span>
<span>393</span>
<span>394</span>
<span>395</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    def with_transaction_returning_status
</div><div class="line">      status = nil
</div><div class="line active">      self.class.transaction do
</div><div class="line">        add_to_transaction
</div><div class="line">        begin
</div><div class="line">          status = yield
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-74">
      <div class="info">
        Extracted source (around line <strong>#314</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>312</span>
<span>313</span>
<span>314</span>
<span>315</span>
<span>316</span>
<span>317</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">    def destroy #:nodoc:
</div><div class="line active">      with_transaction_returning_status { super }
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def save(*) #:nodoc:
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source " id="frame-source-75">
      <div class="info">
        Extracted source (around line <strong>#61</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>59</span>
<span>60</span>
<span>61</span>
<span>62</span>
<span>63</span>
<span>64</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">   def destroy
</div><div class="line">    @event = Event.find(params[:id])
</div><div class="line active">    @event.destroy
</div><div class="line"> 
</div><div class="line">    redirect_to events_path
</div><div class="line">  end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-76">
      <div class="info">
        Extracted source (around line <strong>#4</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>2</span>
<span>3</span>
<span>4</span>
<span>5</span>
<span>6</span>
<span>7</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">  module BasicImplicitRender # :nodoc:
</div><div class="line">    def send_action(method, *args)
</div><div class="line active">      super.tap { default_render unless performed? }
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def default_render(*args)
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-77">
      <div class="info">
        Extracted source (around line <strong>#188</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>186</span>
<span>187</span>
<span>188</span>
<span>189</span>
<span>190</span>
<span>191</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      # which is *not* necessarily the same as the action name.
</div><div class="line">      def process_action(method_name, *args)
</div><div class="line active">        send_action(method_name, *args)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      # Actually call the method associated with the action. Override
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-78">
      <div class="info">
        Extracted source (around line <strong>#30</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>28</span>
<span>29</span>
<span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    def process_action(*) #:nodoc:
</div><div class="line">      self.formats = request.formats.map(&amp;:ref).compact
</div><div class="line active">      super
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # Check for double render errors and set the content_type after rendering.
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-79">
      <div class="info">
        Extracted source (around line <strong>#20</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>18</span>
<span>19</span>
<span>20</span>
<span>21</span>
<span>22</span>
<span>23</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    def process_action(*args)
</div><div class="line">      run_callbacks(:process_action) do
</div><div class="line active">        super
</div><div class="line">      end
</div><div class="line">    end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-80">
      <div class="info">
        Extracted source (around line <strong>#126</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>124</span>
<span>125</span>
<span>126</span>
<span>127</span>
<span>128</span>
<span>129</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        def call(env)
</div><div class="line">          block = env.run_block
</div><div class="line active">          env.value = !env.halted &amp;&amp; (!block || block.call)
</div><div class="line">          env
</div><div class="line">        end
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-81">
      <div class="info">
        Extracted source (around line <strong>#506</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>504</span>
<span>505</span>
<span>506</span>
<span>507</span>
<span>508</span>
<span>509</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      def compile
</div><div class="line">        @callbacks || @mutex.synchronize do
</div><div class="line active">          final_sequence = CallbackSequence.new { |env| Filters::ENDING.call(env) }
</div><div class="line">          @callbacks ||= @chain.reverse.inject(final_sequence) do |callback_sequence, callback|
</div><div class="line">            callback.apply callback_sequence
</div><div class="line">          end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-82">
      <div class="info">
        Extracted source (around line <strong>#455</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>453</span>
<span>454</span>
<span>455</span>
<span>456</span>
<span>457</span>
<span>458</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      def call(arg)
</div><div class="line">        @before.each { |b| b.call(arg) }
</div><div class="line active">        value = @call.call(arg)
</div><div class="line">        @after.each { |a| a.call(arg) }
</div><div class="line">        value
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-83">
      <div class="info">
        Extracted source (around line <strong>#101</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>99</span>
<span>100</span>
<span>101</span>
<span>102</span>
<span>103</span>
<span>104</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        runner = callbacks.compile
</div><div class="line">        e = Filters::Environment.new(self, false, nil, block)
</div><div class="line active">        runner.call(e).value
</div><div class="line">      end
</div><div class="line">    end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-84">
      <div class="info">
        Extracted source (around line <strong>#750</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>748</span>
<span>749</span>
<span>750</span>
<span>751</span>
<span>752</span>
<span>753</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          module_eval &lt;&lt;-RUBY, __FILE__, __LINE__ + 1
</div><div class="line">            def _run_#{name}_callbacks(&amp;block)
</div><div class="line active">              __run_callbacks__(_#{name}_callbacks, &amp;block)
</div><div class="line">            end
</div><div class="line">          RUBY
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-85">
      <div class="info">
        Extracted source (around line <strong>#90</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>88</span>
<span>89</span>
<span>90</span>
<span>91</span>
<span>92</span>
<span>93</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    #   end
</div><div class="line">    def run_callbacks(kind, &amp;block)
</div><div class="line active">      send "_run_#{kind}_callbacks", &amp;block
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    private
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-86">
      <div class="info">
        Extracted source (around line <strong>#19</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>17</span>
<span>18</span>
<span>19</span>
<span>20</span>
<span>21</span>
<span>22</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    # process_action callbacks around the normal behavior.
</div><div class="line">    def process_action(*args)
</div><div class="line active">      run_callbacks(:process_action) do
</div><div class="line">        super
</div><div class="line">      end
</div><div class="line">    end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-87">
      <div class="info">
        Extracted source (around line <strong>#20</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>18</span>
<span>19</span>
<span>20</span>
<span>21</span>
<span>22</span>
<span>23</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    private
</div><div class="line">      def process_action(*args)
</div><div class="line active">        super
</div><div class="line">      rescue Exception =&gt; exception
</div><div class="line">        request.env['action_dispatch.show_detailed_exceptions'] ||= show_detailed_exceptions?
</div><div class="line">        rescue_with_handler(exception) || raise
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-88">
      <div class="info">
        Extracted source (around line <strong>#32</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
<span>34</span>
<span>35</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      ActiveSupport::Notifications.instrument("process_action.action_controller", raw_payload) do |payload|
</div><div class="line">        begin
</div><div class="line active">          result = super
</div><div class="line">          payload[:status] = response.status
</div><div class="line">          result
</div><div class="line">        ensure
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-89">
      <div class="info">
        Extracted source (around line <strong>#164</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>162</span>
<span>163</span>
<span>164</span>
<span>165</span>
<span>166</span>
<span>167</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      def instrument(name, payload = {})
</div><div class="line">        if notifier.listening?(name)
</div><div class="line active">          instrumenter.instrument(name, payload) { yield payload if block_given? }
</div><div class="line">        else
</div><div class="line">          yield payload if block_given?
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-90">
      <div class="info">
        Extracted source (around line <strong>#21</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>19</span>
<span>20</span>
<span>21</span>
<span>22</span>
<span>23</span>
<span>24</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        listeners_state = start name, payload
</div><div class="line">        begin
</div><div class="line active">          yield payload
</div><div class="line">        rescue Exception =&gt; e
</div><div class="line">          payload[:exception] = [e.class.name, e.message]
</div><div class="line">          payload[:exception_object] = e
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-91">
      <div class="info">
        Extracted source (around line <strong>#164</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>162</span>
<span>163</span>
<span>164</span>
<span>165</span>
<span>166</span>
<span>167</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      def instrument(name, payload = {})
</div><div class="line">        if notifier.listening?(name)
</div><div class="line active">          instrumenter.instrument(name, payload) { yield payload if block_given? }
</div><div class="line">        else
</div><div class="line">          yield payload if block_given?
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-92">
      <div class="info">
        Extracted source (around line <strong>#30</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>28</span>
<span>29</span>
<span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      ActiveSupport::Notifications.instrument("start_processing.action_controller", raw_payload.dup)
</div><div class="line">
</div><div class="line active">      ActiveSupport::Notifications.instrument("process_action.action_controller", raw_payload) do |payload|
</div><div class="line">        begin
</div><div class="line">          result = super
</div><div class="line">          payload[:status] = response.status
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-93">
      <div class="info">
        Extracted source (around line <strong>#248</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>246</span>
<span>247</span>
<span>248</span>
<span>249</span>
<span>250</span>
<span>251</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        request.filtered_parameters.merge! wrapped_filtered_hash
</div><div class="line">      end
</div><div class="line active">      super
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    private
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-94">
      <div class="info">
        Extracted source (around line <strong>#18</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>16</span>
<span>17</span>
<span>18</span>
<span>19</span>
<span>20</span>
<span>21</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        # and it won't be cleaned up by the method below.
</div><div class="line">        ActiveRecord::LogSubscriber.reset_runtime
</div><div class="line active">        super
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      def cleanup_view_runtime
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-95">
      <div class="info">
        Extracted source (around line <strong>#126</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>124</span>
<span>125</span>
<span>126</span>
<span>127</span>
<span>128</span>
<span>129</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      @_response_body = nil
</div><div class="line">
</div><div class="line active">      process_action(action_name, *args)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # Delegates to the class' ::controller_path
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-96">
      <div class="info">
        Extracted source (around line <strong>#30</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>28</span>
<span>29</span>
<span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    def process(*) #:nodoc:
</div><div class="line">      old_config, I18n.config = I18n.config, I18nProxy.new(I18n.config, lookup_context)
</div><div class="line active">      super
</div><div class="line">    ensure
</div><div class="line">      I18n.config = old_config
</div><div class="line">    end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-97">
      <div class="info">
        Extracted source (around line <strong>#190</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>188</span>
<span>189</span>
<span>190</span>
<span>191</span>
<span>192</span>
<span>193</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      set_request!(request)
</div><div class="line">      set_response!(response)
</div><div class="line active">      process(name)
</div><div class="line">      request.commit_flash
</div><div class="line">      to_a
</div><div class="line">    end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-98">
      <div class="info">
        Extracted source (around line <strong>#262</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>260</span>
<span>261</span>
<span>262</span>
<span>263</span>
<span>264</span>
<span>265</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        middleware_stack.build(name) { |env| new.dispatch(name, req, res) }.call req.env
</div><div class="line">      else
</div><div class="line active">        new.dispatch(name, req, res)
</div><div class="line">      end
</div><div class="line">    end
</div><div class="line">  end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-99">
      <div class="info">
        Extracted source (around line <strong>#50</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>48</span>
<span>49</span>
<span>50</span>
<span>51</span>
<span>52</span>
<span>53</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">        def dispatch(controller, action, req, res)
</div><div class="line active">          controller.dispatch(action, req, res)
</div><div class="line">        end
</div><div class="line">      end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-100">
      <div class="info">
        Extracted source (around line <strong>#32</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
<span>34</span>
<span>35</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          controller = controller req
</div><div class="line">          res        = controller.make_response! req
</div><div class="line active">          dispatch(controller, params[:action], req, res)
</div><div class="line">        rescue ActionController::RoutingError
</div><div class="line">          if @raise_on_name_error
</div><div class="line">            raise
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-101">
      <div class="info">
        Extracted source (around line <strong>#39</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>37</span>
<span>38</span>
<span>39</span>
<span>40</span>
<span>41</span>
<span>42</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          req.path_parameters = set_params.merge parameters
</div><div class="line">
</div><div class="line active">          status, headers, body = route.app.serve(req)
</div><div class="line">
</div><div class="line">          if 'pass' == headers['X-Cascade']
</div><div class="line">            req.script_name     = script_name
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-102">
      <div class="info">
        Extracted source (around line <strong>#26</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>24</span>
<span>25</span>
<span>26</span>
<span>27</span>
<span>28</span>
<span>29</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">      def serve(req)
</div><div class="line active">        find_routes(req).each do |match, parameters, route|
</div><div class="line">          set_params  = req.path_parameters
</div><div class="line">          path_info   = req.path_info
</div><div class="line">          script_name = req.script_name
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-103">
      <div class="info">
        Extracted source (around line <strong>#26</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>24</span>
<span>25</span>
<span>26</span>
<span>27</span>
<span>28</span>
<span>29</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">      def serve(req)
</div><div class="line active">        find_routes(req).each do |match, parameters, route|
</div><div class="line">          set_params  = req.path_parameters
</div><div class="line">          path_info   = req.path_info
</div><div class="line">          script_name = req.script_name
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-104">
      <div class="info">
        Extracted source (around line <strong>#725</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>723</span>
<span>724</span>
<span>725</span>
<span>726</span>
<span>727</span>
<span>728</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        req = make_request(env)
</div><div class="line">        req.path_info = Journey::Router::Utils.normalize_path(req.path_info)
</div><div class="line active">        @router.serve(req)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      def recognize_path(path, environment = {})
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-105">
      <div class="info">
        Extracted source (around line <strong>#36</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>34</span>
<span>35</span>
<span>36</span>
<span>37</span>
<span>38</span>
<span>39</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      env['warden'] = Proxy.new(env, self)
</div><div class="line">      result = catch(:warden) do
</div><div class="line active">        @app.call(env)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      result ||= {}
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-106">
      <div class="info">
        Extracted source (around line <strong>#35</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>33</span>
<span>34</span>
<span>35</span>
<span>36</span>
<span>37</span>
<span>38</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">      env['warden'] = Proxy.new(env, self)
</div><div class="line active">      result = catch(:warden) do
</div><div class="line">        @app.call(env)
</div><div class="line">      end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-107">
      <div class="info">
        Extracted source (around line <strong>#35</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>33</span>
<span>34</span>
<span>35</span>
<span>36</span>
<span>37</span>
<span>38</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">      env['warden'] = Proxy.new(env, self)
</div><div class="line active">      result = catch(:warden) do
</div><div class="line">        @app.call(env)
</div><div class="line">      end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-108">
      <div class="info">
        Extracted source (around line <strong>#25</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>23</span>
<span>24</span>
<span>25</span>
<span>26</span>
<span>27</span>
<span>28</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      status, headers, body = @app.call(env)
</div><div class="line">
</div><div class="line">      if etag_status?(status) &amp;&amp; etag_body?(body) &amp;&amp; !skip_caching?(headers)
</div><div class="line">        original_body = body
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-109">
      <div class="info">
        Extracted source (around line <strong>#38</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>36</span>
<span>37</span>
<span>38</span>
<span>39</span>
<span>40</span>
<span>41</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        [status, headers, body]
</div><div class="line">      else
</div><div class="line active">        @app.call(env)
</div><div class="line">      end
</div><div class="line">    end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-110">
      <div class="info">
        Extracted source (around line <strong>#12</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>10</span>
<span>11</span>
<span>12</span>
<span>13</span>
<span>14</span>
<span>15</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      status, headers, body = @app.call(env)
</div><div class="line">
</div><div class="line">      if env[REQUEST_METHOD] == HEAD
</div><div class="line">        [
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-111">
      <div class="info">
        Extracted source (around line <strong>#222</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>220</span>
<span>221</span>
<span>222</span>
<span>223</span>
<span>224</span>
<span>225</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          req = make_request env
</div><div class="line">          prepare_session(req)
</div><div class="line active">          status, headers, body = app.call(req.env)
</div><div class="line">          res = Rack::Response::Raw.new status, headers
</div><div class="line">          commit_session(req, res)
</div><div class="line">          [status, headers, body]
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-112">
      <div class="info">
        Extracted source (around line <strong>#216</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>214</span>
<span>215</span>
<span>216</span>
<span>217</span>
<span>218</span>
<span>219</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">        def call(env)
</div><div class="line active">          context(env)
</div><div class="line">        end
</div><div class="line">
</div><div class="line">        def context(env, app=@app)
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-113">
      <div class="info">
        Extracted source (around line <strong>#613</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>611</span>
<span>612</span>
<span>613</span>
<span>614</span>
<span>615</span>
<span>616</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      request = ActionDispatch::Request.new env
</div><div class="line">
</div><div class="line active">      status, headers, body = @app.call(env)
</div><div class="line">
</div><div class="line">      if request.have_cookie_jar?
</div><div class="line">        cookie_jar = request.cookie_jar
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-114">
      <div class="info">
        Extracted source (around line <strong>#553</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>551</span>
<span>552</span>
<span>553</span>
<span>554</span>
<span>555</span>
<span>556</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          end
</div><div class="line">        end
</div><div class="line active">        @app.call(env)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      private
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-115">
      <div class="info">
        Extracted source (around line <strong>#38</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>36</span>
<span>37</span>
<span>38</span>
<span>39</span>
<span>40</span>
<span>41</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      result = run_callbacks :call do
</div><div class="line">        begin
</div><div class="line active">          @app.call(env)
</div><div class="line">        rescue =&gt; error
</div><div class="line">        end
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-116">
      <div class="info">
        Extracted source (around line <strong>#97</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>95</span>
<span>96</span>
<span>97</span>
<span>98</span>
<span>99</span>
<span>100</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    def __run_callbacks__(callbacks, &amp;block)
</div><div class="line">      if callbacks.empty?
</div><div class="line active">        yield if block_given?
</div><div class="line">      else
</div><div class="line">        runner = callbacks.compile
</div><div class="line">        e = Filters::Environment.new(self, false, nil, block)
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-117">
      <div class="info">
        Extracted source (around line <strong>#750</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>748</span>
<span>749</span>
<span>750</span>
<span>751</span>
<span>752</span>
<span>753</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          module_eval &lt;&lt;-RUBY, __FILE__, __LINE__ + 1
</div><div class="line">            def _run_#{name}_callbacks(&amp;block)
</div><div class="line active">              __run_callbacks__(_#{name}_callbacks, &amp;block)
</div><div class="line">            end
</div><div class="line">          RUBY
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-118">
      <div class="info">
        Extracted source (around line <strong>#90</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>88</span>
<span>89</span>
<span>90</span>
<span>91</span>
<span>92</span>
<span>93</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    #   end
</div><div class="line">    def run_callbacks(kind, &amp;block)
</div><div class="line active">      send "_run_#{kind}_callbacks", &amp;block
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    private
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-119">
      <div class="info">
        Extracted source (around line <strong>#36</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>34</span>
<span>35</span>
<span>36</span>
<span>37</span>
<span>38</span>
<span>39</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    def call(env)
</div><div class="line">      error = nil
</div><div class="line active">      result = run_callbacks :call do
</div><div class="line">        begin
</div><div class="line">          @app.call(env)
</div><div class="line">        rescue =&gt; error
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-120">
      <div class="info">
        Extracted source (around line <strong>#12</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>10</span>
<span>11</span>
<span>12</span>
<span>13</span>
<span>14</span>
<span>15</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      state = @executor.run!
</div><div class="line">      begin
</div><div class="line active">        response = @app.call(env)
</div><div class="line">        returned = response &lt;&lt; ::Rack::BodyProxy.new(response.pop) { state.complete! }
</div><div class="line">      ensure
</div><div class="line">        state.complete! unless returned
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-121">
      <div class="info">
        Extracted source (around line <strong>#79</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>77</span>
<span>78</span>
<span>79</span>
<span>80</span>
<span>81</span>
<span>82</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      req = ActionDispatch::Request.new env
</div><div class="line">      req.remote_ip = GetIp.new(req, check_ip, proxies)
</div><div class="line active">      @app.call(req.env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # The GetIp class exists as a way to defer processing of the request data
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-122">
      <div class="info">
        Extracted source (around line <strong>#49</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>47</span>
<span>48</span>
<span>49</span>
<span>50</span>
<span>51</span>
<span>52</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    def call(env)
</div><div class="line">      request = ActionDispatch::Request.new env
</div><div class="line active">      _, headers, body = response = @app.call(env)
</div><div class="line">
</div><div class="line">      if headers['X-Cascade'] == 'pass'
</div><div class="line">        body.close if body.respond_to?(:close)
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-123">
      <div class="info">
        Extracted source (around line <strong>#135</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>133</span>
<span>134</span>
<span>135</span>
<span>136</span>
<span>137</span>
<span>138</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">      def call_app(env)
</div><div class="line active">        @app.call(env)
</div><div class="line">      rescue =&gt; e
</div><div class="line">        throw :app_exception, e
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-124">
      <div class="info">
        Extracted source (around line <strong>#20</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>18</span>
<span>19</span>
<span>20</span>
<span>21</span>
<span>22</span>
<span>23</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      app_exception = catch :app_exception do
</div><div class="line">        request = create_regular_or_whiny_request(env)
</div><div class="line active">        return call_app(env) unless request.from_whitelisted_ip?
</div><div class="line">
</div><div class="line">        if id = id_for_repl_session_update(request)
</div><div class="line">          return update_repl_session(id, request)
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-125">
      <div class="info">
        Extracted source (around line <strong>#18</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>16</span>
<span>17</span>
<span>18</span>
<span>19</span>
<span>20</span>
<span>21</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      app_exception = catch :app_exception do
</div><div class="line">        request = create_regular_or_whiny_request(env)
</div><div class="line">        return call_app(env) unless request.from_whitelisted_ip?
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-126">
      <div class="info">
        Extracted source (around line <strong>#18</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>16</span>
<span>17</span>
<span>18</span>
<span>19</span>
<span>20</span>
<span>21</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      app_exception = catch :app_exception do
</div><div class="line">        request = create_regular_or_whiny_request(env)
</div><div class="line">        return call_app(env) unless request.from_whitelisted_ip?
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-127">
      <div class="info">
        Extracted source (around line <strong>#31</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>29</span>
<span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
<span>34</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    def call(env)
</div><div class="line">      request = ActionDispatch::Request.new env
</div><div class="line active">      @app.call(env)
</div><div class="line">    rescue Exception =&gt; exception
</div><div class="line">      if request.show_exceptions?
</div><div class="line">        render_exception(request, exception)
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-128">
      <div class="info">
        Extracted source (around line <strong>#36</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>34</span>
<span>35</span>
<span>36</span>
<span>37</span>
<span>38</span>
<span>39</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        instrumenter.start 'request.action_dispatch', request: request
</div><div class="line">        logger.info { started_request_message(request) }
</div><div class="line active">        resp = @app.call(env)
</div><div class="line">        resp[2] = ::Rack::BodyProxy.new(resp[2]) { finish(request) }
</div><div class="line">        resp
</div><div class="line">      rescue Exception
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-129">
      <div class="info">
        Extracted source (around line <strong>#24</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>22</span>
<span>23</span>
<span>24</span>
<span>25</span>
<span>26</span>
<span>27</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">        if logger.respond_to?(:tagged)
</div><div class="line active">          logger.tagged(compute_tags(request)) { call_app(request, env) }
</div><div class="line">        else
</div><div class="line">          call_app(request, env)
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-130">
      <div class="info">
        Extracted source (around line <strong>#69</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>67</span>
<span>68</span>
<span>69</span>
<span>70</span>
<span>71</span>
<span>72</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">    def tagged(*tags)
</div><div class="line active">      formatter.tagged(*tags) { yield self }
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def flush
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-131">
      <div class="info">
        Extracted source (around line <strong>#26</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>24</span>
<span>25</span>
<span>26</span>
<span>27</span>
<span>28</span>
<span>29</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      def tagged(*tags)
</div><div class="line">        new_tags = push_tags(*tags)
</div><div class="line active">        yield self
</div><div class="line">      ensure
</div><div class="line">        pop_tags(new_tags.size)
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-132">
      <div class="info">
        Extracted source (around line <strong>#69</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>67</span>
<span>68</span>
<span>69</span>
<span>70</span>
<span>71</span>
<span>72</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">    def tagged(*tags)
</div><div class="line active">      formatter.tagged(*tags) { yield self }
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def flush
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-133">
      <div class="info">
        Extracted source (around line <strong>#24</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>22</span>
<span>23</span>
<span>24</span>
<span>25</span>
<span>26</span>
<span>27</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">        if logger.respond_to?(:tagged)
</div><div class="line active">          logger.tagged(compute_tags(request)) { call_app(request, env) }
</div><div class="line">        else
</div><div class="line">          call_app(request, env)
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-134">
      <div class="info">
        Extracted source (around line <strong>#13</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>11</span>
<span>12</span>
<span>13</span>
<span>14</span>
<span>15</span>
<span>16</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          ::Rails.logger.silence { @app.call(env) }
</div><div class="line">        else
</div><div class="line active">          @app.call(env)
</div><div class="line">        end
</div><div class="line">      end
</div><div class="line">    end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-135">
      <div class="info">
        Extracted source (around line <strong>#24</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>22</span>
<span>23</span>
<span>24</span>
<span>25</span>
<span>26</span>
<span>27</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      req = ActionDispatch::Request.new env
</div><div class="line">      req.request_id = make_request_id(req.x_request_id)
</div><div class="line active">      @app.call(env).tap { |_status, headers, _body| headers[X_REQUEST_ID] = req.request_id }
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    private
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-136">
      <div class="info">
        Extracted source (around line <strong>#22</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>20</span>
<span>21</span>
<span>22</span>
<span>23</span>
<span>24</span>
<span>25</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      end
</div><div class="line">
</div><div class="line active">      @app.call(env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def method_override(env)
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-137">
      <div class="info">
        Extracted source (around line <strong>#22</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>20</span>
<span>21</span>
<span>22</span>
<span>23</span>
<span>24</span>
<span>25</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    def call(env)
</div><div class="line">      start_time = Utils.clock_time
</div><div class="line active">      status, headers, body = @app.call(env)
</div><div class="line">      request_time = Utils.clock_time - start_time
</div><div class="line">
</div><div class="line">      unless headers.has_key?(@header_name)
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-138">
      <div class="info">
        Extracted source (around line <strong>#28</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>26</span>
<span>27</span>
<span>28</span>
<span>29</span>
<span>30</span>
<span>31</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">          def call(env)
</div><div class="line">            LocalCacheRegistry.set_cache_for(local_cache_key, LocalStore.new)
</div><div class="line active">            response = @app.call(env)
</div><div class="line">            response[2] = ::Rack::BodyProxy.new(response[2]) do
</div><div class="line">              LocalCacheRegistry.set_cache_for(local_cache_key, nil)
</div><div class="line">            end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-139">
      <div class="info">
        Extracted source (around line <strong>#12</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>10</span>
<span>11</span>
<span>12</span>
<span>13</span>
<span>14</span>
<span>15</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      state = @executor.run!
</div><div class="line">      begin
</div><div class="line active">        response = @app.call(env)
</div><div class="line">        returned = response &lt;&lt; ::Rack::BodyProxy.new(response.pop) { state.complete! }
</div><div class="line">      ensure
</div><div class="line">        state.complete! unless returned
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-140">
      <div class="info">
        Extracted source (around line <strong>#136</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>134</span>
<span>135</span>
<span>136</span>
<span>137</span>
<span>138</span>
<span>139</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      end
</div><div class="line">
</div><div class="line active">      @app.call(req.env)
</div><div class="line">    end
</div><div class="line">  end
</div><div class="line">end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-141">
      <div class="info">
        Extracted source (around line <strong>#111</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>109</span>
<span>110</span>
<span>111</span>
<span>112</span>
<span>113</span>
<span>114</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      status, headers, body = @app.call(env)
</div><div class="line">      if body.respond_to?(:to_path)
</div><div class="line">        case type = variation(env)
</div><div class="line">        when 'X-Accel-Redirect'
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-142">
      <div class="info">
        Extracted source (around line <strong>#522</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>520</span>
<span>521</span>
<span>522</span>
<span>523</span>
<span>524</span>
<span>525</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">    def call(env)
</div><div class="line">      req = build_request env
</div><div class="line active">      app.call req.env
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # Defines additional Rack env configuration that is added on each call.
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-143">
      <div class="info">
        Extracted source (around line <strong>#224</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>222</span>
<span>223</span>
<span>224</span>
<span>225</span>
<span>226</span>
<span>227</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      def call(env)
</div><div class="line">        env[Const::PUMA_CONFIG] = @config
</div><div class="line active">        @app.call(env)
</div><div class="line">      end
</div><div class="line">    end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-144">
      <div class="info">
        Extracted source (around line <strong>#600</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>598</span>
<span>599</span>
<span>600</span>
<span>601</span>
<span>602</span>
<span>603</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">      begin
</div><div class="line">        begin
</div><div class="line active">          status, headers, res_body = @app.call(env)
</div><div class="line">
</div><div class="line">          return :async if req.hijacked
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-145">
      <div class="info">
        Extracted source (around line <strong>#435</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>433</span>
<span>434</span>
<span>435</span>
<span>436</span>
<span>437</span>
<span>438</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">        while true
</div><div class="line active">          case handle_request(client, buffer)
</div><div class="line">          when false
</div><div class="line">            return
</div><div class="line">          when :async
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-146">
      <div class="info">
        Extracted source (around line <strong>#299</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>297</span>
<span>298</span>
<span>299</span>
<span>300</span>
<span>301</span>
<span>302</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">        else
</div><div class="line">          if process_now
</div><div class="line active">            process_client client, buffer
</div><div class="line">          else
</div><div class="line">            client.set_timeout @first_data_timeout
</div><div class="line">            @reactor.add client
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-147">
      <div class="info">
        Extracted source (around line <strong>#120</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tbody><tr>
            <td>
              <pre class="line_numbers"><span>118</span>
<span>119</span>
<span>120</span>
<span>121</span>
<span>122</span>
<span>123</span>
              </pre>
            </td>
<td width="100%">
<pre><div class="line">
</div><div class="line">          begin
</div><div class="line active">            block.call(work, *extra)
</div><div class="line">          rescue Exception =&gt; e
</div><div class="line">            STDERR.puts "Error reached top of thread-pool: #{e.message} (#{e.class})"
</div><div class="line">          end
</div>
</pre>
</td>
          </tr>
        </tbody></table>
      </div>
    </div>

  
<p><code>Rails.root: /vagrant/src/grace_final</code></p>

<div id="traces">
    <a href="http://localhost:3030/events/2#" onclick="hide(&#39;Framework-Trace&#39;);hide(&#39;Full-Trace&#39;);show(&#39;Application-Trace&#39;);; return false;">Application Trace</a> |
    <a href="http://localhost:3030/events/2#" onclick="hide(&#39;Application-Trace&#39;);hide(&#39;Full-Trace&#39;);show(&#39;Framework-Trace&#39;);; return false;">Framework Trace</a> |
    <a href="http://localhost:3030/events/2#" onclick="hide(&#39;Application-Trace&#39;);hide(&#39;Framework-Trace&#39;);show(&#39;Full-Trace&#39;);; return false;">Full Trace</a> 

    <div id="Application-Trace" style="display: block;">
      <pre><code><a class="trace-frames" data-frame-id="75" href="http://localhost:3030/events/2#">app/controllers/events_controller.rb:61:in `destroy'</a><br></code></pre>
    </div>
    <div id="Framework-Trace" style="display: none;">
      <pre><code><a class="trace-frames" data-frame-id="0" href="http://localhost:3030/events/2#">/home/vagrant/.rbenv/versions/2.3.1/lib/ruby/2.3.0/uri/rfc3986_parser.rb:67:in `split'</a><br><a class="trace-frames" data-frame-id="1" href="http://localhost:3030/events/2#">/home/vagrant/.rbenv/versions/2.3.1/lib/ruby/2.3.0/uri/rfc3986_parser.rb:73:in `parse'</a><br><a class="trace-frames" data-frame-id="2" href="http://localhost:3030/events/2#">/home/vagrant/.rbenv/versions/2.3.1/lib/ruby/2.3.0/uri/common.rb:227:in `parse'</a><br><a class="trace-frames" data-frame-id="3" href="http://localhost:3030/events/2#">aws-sdk-core (2.9.9) lib/seahorse/client/plugins/endpoint.rb:28:in `after_initialize'</a><br><a class="trace-frames" data-frame-id="4" href="http://localhost:3030/events/2#">aws-sdk-core (2.9.9) lib/seahorse/client/base.rb:84:in `block in after_initialize'</a><br><a class="trace-frames" data-frame-id="5" href="http://localhost:3030/events/2#">aws-sdk-core (2.9.9) lib/seahorse/client/base.rb:83:in `each'</a><br><a class="trace-frames" data-frame-id="6" href="http://localhost:3030/events/2#">aws-sdk-core (2.9.9) lib/seahorse/client/base.rb:83:in `after_initialize'</a><br><a class="trace-frames" data-frame-id="7" href="http://localhost:3030/events/2#">aws-sdk-core (2.9.9) lib/seahorse/client/base.rb:21:in `initialize'</a><br><a class="trace-frames" data-frame-id="8" href="http://localhost:3030/events/2#">aws-sdk-core (2.9.9) lib/seahorse/client/base.rb:105:in `new'</a><br><a class="trace-frames" data-frame-id="9" href="http://localhost:3030/events/2#">aws-sdk-resources (2.9.9) lib/aws-sdk-resources/resource.rb:169:in `extract_client'</a><br><a class="trace-frames" data-frame-id="10" href="http://localhost:3030/events/2#">aws-sdk-resources (2.9.9) lib/aws-sdk-resources/resource.rb:15:in `initialize'</a><br><a class="trace-frames" data-frame-id="11" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/storage/s3.rb:247:in `new'</a><br><a class="trace-frames" data-frame-id="12" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/storage/s3.rb:247:in `obtain_s3_instance_for'</a><br><a class="trace-frames" data-frame-id="13" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/storage/s3.rb:241:in `s3_interface'</a><br><a class="trace-frames" data-frame-id="14" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/storage/s3.rb:251:in `s3_bucket'</a><br><a class="trace-frames" data-frame-id="15" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/storage/s3.rb:259:in `s3_object'</a><br><a class="trace-frames" data-frame-id="16" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/storage/s3.rb:300:in `exists?'</a><br><a class="trace-frames" data-frame-id="17" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/attachment.rb:560:in `block in queue_all_for_delete'</a><br><a class="trace-frames" data-frame-id="18" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/attachment.rb:559:in `map'</a><br><a class="trace-frames" data-frame-id="19" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/attachment.rb:559:in `queue_all_for_delete'</a><br><a class="trace-frames" data-frame-id="20" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/has_attached_file.rb:93:in `block in add_active_record_callbacks'</a><br><a class="trace-frames" data-frame-id="21" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:396:in `instance_exec'</a><br><a class="trace-frames" data-frame-id="22" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:396:in `block in make_lambda'</a><br><a class="trace-frames" data-frame-id="23" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:169:in `block (2 levels) in halting'</a><br><a class="trace-frames" data-frame-id="24" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:770:in `block (2 levels) in deprecated_false_terminator'</a><br><a class="trace-frames" data-frame-id="25" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:769:in `catch'</a><br><a class="trace-frames" data-frame-id="26" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:769:in `block in deprecated_false_terminator'</a><br><a class="trace-frames" data-frame-id="27" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:170:in `block in halting'</a><br><a class="trace-frames" data-frame-id="28" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:454:in `block in call'</a><br><a class="trace-frames" data-frame-id="29" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:454:in `each'</a><br><a class="trace-frames" data-frame-id="30" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:454:in `call'</a><br><a class="trace-frames" data-frame-id="31" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:101:in `__run_callbacks__'</a><br><a class="trace-frames" data-frame-id="32" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:750:in `_run_destroy_callbacks'</a><br><a class="trace-frames" data-frame-id="33" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/callbacks.rb:283:in `destroy'</a><br><a class="trace-frames" data-frame-id="34" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:314:in `block in destroy'</a><br><a class="trace-frames" data-frame-id="35" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:395:in `block in with_transaction_returning_status'</a><br><a class="trace-frames" data-frame-id="36" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/connection_adapters/abstract/database_statements.rb:230:in `transaction'</a><br><a class="trace-frames" data-frame-id="37" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:211:in `transaction'</a><br><a class="trace-frames" data-frame-id="38" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:392:in `with_transaction_returning_status'</a><br><a class="trace-frames" data-frame-id="39" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:314:in `destroy'</a><br><a class="trace-frames" data-frame-id="40" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/persistence.rb:197:in `destroy!'</a><br><a class="trace-frames" data-frame-id="41" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/has_many_association.rb:120:in `each'</a><br><a class="trace-frames" data-frame-id="42" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/has_many_association.rb:120:in `delete_records'</a><br><a class="trace-frames" data-frame-id="43" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/collection_association.rb:561:in `remove_records'</a><br><a class="trace-frames" data-frame-id="44" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/collection_association.rb:554:in `block in delete_or_destroy'</a><br><a class="trace-frames" data-frame-id="45" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/collection_association.rb:207:in `block in transaction'</a><br><a class="trace-frames" data-frame-id="46" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/connection_adapters/abstract/database_statements.rb:230:in `transaction'</a><br><a class="trace-frames" data-frame-id="47" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:211:in `transaction'</a><br><a class="trace-frames" data-frame-id="48" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/collection_association.rb:206:in `transaction'</a><br><a class="trace-frames" data-frame-id="49" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/collection_association.rb:554:in `delete_or_destroy'</a><br><a class="trace-frames" data-frame-id="50" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/collection_association.rb:299:in `destroy'</a><br><a class="trace-frames" data-frame-id="51" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/collection_association.rb:247:in `destroy_all'</a><br><a class="trace-frames" data-frame-id="52" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/has_many_association.rb:34:in `handle_dependency'</a><br><a class="trace-frames" data-frame-id="53" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/builder/association.rb:140:in `block in add_destroy_callbacks'</a><br><a class="trace-frames" data-frame-id="54" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:398:in `instance_exec'</a><br><a class="trace-frames" data-frame-id="55" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:398:in `block in make_lambda'</a><br><a class="trace-frames" data-frame-id="56" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:169:in `block (2 levels) in halting'</a><br><a class="trace-frames" data-frame-id="57" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:770:in `block (2 levels) in deprecated_false_terminator'</a><br><a class="trace-frames" data-frame-id="58" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:769:in `catch'</a><br><a class="trace-frames" data-frame-id="59" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:769:in `block in deprecated_false_terminator'</a><br><a class="trace-frames" data-frame-id="60" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:170:in `block in halting'</a><br><a class="trace-frames" data-frame-id="61" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:454:in `block in call'</a><br><a class="trace-frames" data-frame-id="62" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:454:in `each'</a><br><a class="trace-frames" data-frame-id="63" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:454:in `call'</a><br><a class="trace-frames" data-frame-id="64" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:101:in `__run_callbacks__'</a><br><a class="trace-frames" data-frame-id="65" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:750:in `_run_destroy_callbacks'</a><br><a class="trace-frames" data-frame-id="66" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/callbacks.rb:283:in `destroy'</a><br><a class="trace-frames" data-frame-id="67" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:314:in `block in destroy'</a><br><a class="trace-frames" data-frame-id="68" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:395:in `block in with_transaction_returning_status'</a><br><a class="trace-frames" data-frame-id="69" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/connection_adapters/abstract/database_statements.rb:232:in `block in transaction'</a><br><a class="trace-frames" data-frame-id="70" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/connection_adapters/abstract/transaction.rb:189:in `within_new_transaction'</a><br><a class="trace-frames" data-frame-id="71" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/connection_adapters/abstract/database_statements.rb:232:in `transaction'</a><br><a class="trace-frames" data-frame-id="72" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:211:in `transaction'</a><br><a class="trace-frames" data-frame-id="73" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:392:in `with_transaction_returning_status'</a><br><a class="trace-frames" data-frame-id="74" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:314:in `destroy'</a><br><a class="trace-frames" data-frame-id="76" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action'</a><br><a class="trace-frames" data-frame-id="77" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/abstract_controller/base.rb:188:in `process_action'</a><br><a class="trace-frames" data-frame-id="78" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal/rendering.rb:30:in `process_action'</a><br><a class="trace-frames" data-frame-id="79" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/abstract_controller/callbacks.rb:20:in `block in process_action'</a><br><a class="trace-frames" data-frame-id="80" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:126:in `call'</a><br><a class="trace-frames" data-frame-id="81" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:506:in `block (2 levels) in compile'</a><br><a class="trace-frames" data-frame-id="82" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:455:in `call'</a><br><a class="trace-frames" data-frame-id="83" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:101:in `__run_callbacks__'</a><br><a class="trace-frames" data-frame-id="84" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:750:in `_run_process_action_callbacks'</a><br><a class="trace-frames" data-frame-id="85" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:90:in `run_callbacks'</a><br><a class="trace-frames" data-frame-id="86" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/abstract_controller/callbacks.rb:19:in `process_action'</a><br><a class="trace-frames" data-frame-id="87" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal/rescue.rb:20:in `process_action'</a><br><a class="trace-frames" data-frame-id="88" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action'</a><br><a class="trace-frames" data-frame-id="89" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/notifications.rb:164:in `block in instrument'</a><br><a class="trace-frames" data-frame-id="90" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/notifications/instrumenter.rb:21:in `instrument'</a><br><a class="trace-frames" data-frame-id="91" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/notifications.rb:164:in `instrument'</a><br><a class="trace-frames" data-frame-id="92" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal/instrumentation.rb:30:in `process_action'</a><br><a class="trace-frames" data-frame-id="93" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal/params_wrapper.rb:248:in `process_action'</a><br><a class="trace-frames" data-frame-id="94" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/railties/controller_runtime.rb:18:in `process_action'</a><br><a class="trace-frames" data-frame-id="95" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/abstract_controller/base.rb:126:in `process'</a><br><a class="trace-frames" data-frame-id="96" href="http://localhost:3030/events/2#">actionview (5.0.2) lib/action_view/rendering.rb:30:in `process'</a><br><a class="trace-frames" data-frame-id="97" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal.rb:190:in `dispatch'</a><br><a class="trace-frames" data-frame-id="98" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal.rb:262:in `dispatch'</a><br><a class="trace-frames" data-frame-id="99" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'</a><br><a class="trace-frames" data-frame-id="100" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/routing/route_set.rb:32:in `serve'</a><br><a class="trace-frames" data-frame-id="101" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/journey/router.rb:39:in `block in serve'</a><br><a class="trace-frames" data-frame-id="102" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/journey/router.rb:26:in `each'</a><br><a class="trace-frames" data-frame-id="103" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/journey/router.rb:26:in `serve'</a><br><a class="trace-frames" data-frame-id="104" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/routing/route_set.rb:725:in `call'</a><br><a class="trace-frames" data-frame-id="105" href="http://localhost:3030/events/2#">warden (1.2.7) lib/warden/manager.rb:36:in `block in call'</a><br><a class="trace-frames" data-frame-id="106" href="http://localhost:3030/events/2#">warden (1.2.7) lib/warden/manager.rb:35:in `catch'</a><br><a class="trace-frames" data-frame-id="107" href="http://localhost:3030/events/2#">warden (1.2.7) lib/warden/manager.rb:35:in `call'</a><br><a class="trace-frames" data-frame-id="108" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/etag.rb:25:in `call'</a><br><a class="trace-frames" data-frame-id="109" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/conditional_get.rb:38:in `call'</a><br><a class="trace-frames" data-frame-id="110" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/head.rb:12:in `call'</a><br><a class="trace-frames" data-frame-id="111" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/session/abstract/id.rb:222:in `context'</a><br><a class="trace-frames" data-frame-id="112" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/session/abstract/id.rb:216:in `call'</a><br><a class="trace-frames" data-frame-id="113" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/cookies.rb:613:in `call'</a><br><a class="trace-frames" data-frame-id="114" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/migration.rb:553:in `call'</a><br><a class="trace-frames" data-frame-id="115" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'</a><br><a class="trace-frames" data-frame-id="116" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:97:in `__run_callbacks__'</a><br><a class="trace-frames" data-frame-id="117" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'</a><br><a class="trace-frames" data-frame-id="118" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:90:in `run_callbacks'</a><br><a class="trace-frames" data-frame-id="119" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/callbacks.rb:36:in `call'</a><br><a class="trace-frames" data-frame-id="120" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/executor.rb:12:in `call'</a><br><a class="trace-frames" data-frame-id="121" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'</a><br><a class="trace-frames" data-frame-id="122" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'</a><br><a class="trace-frames" data-frame-id="123" href="http://localhost:3030/events/2#">web-console (3.5.0) lib/web_console/middleware.rb:135:in `call_app'</a><br><a class="trace-frames" data-frame-id="124" href="http://localhost:3030/events/2#">web-console (3.5.0) lib/web_console/middleware.rb:20:in `block in call'</a><br><a class="trace-frames" data-frame-id="125" href="http://localhost:3030/events/2#">web-console (3.5.0) lib/web_console/middleware.rb:18:in `catch'</a><br><a class="trace-frames" data-frame-id="126" href="http://localhost:3030/events/2#">web-console (3.5.0) lib/web_console/middleware.rb:18:in `call'</a><br><a class="trace-frames" data-frame-id="127" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'</a><br><a class="trace-frames" data-frame-id="128" href="http://localhost:3030/events/2#">railties (5.0.2) lib/rails/rack/logger.rb:36:in `call_app'</a><br><a class="trace-frames" data-frame-id="129" href="http://localhost:3030/events/2#">railties (5.0.2) lib/rails/rack/logger.rb:24:in `block in call'</a><br><a class="trace-frames" data-frame-id="130" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/tagged_logging.rb:69:in `block in tagged'</a><br><a class="trace-frames" data-frame-id="131" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/tagged_logging.rb:26:in `tagged'</a><br><a class="trace-frames" data-frame-id="132" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/tagged_logging.rb:69:in `tagged'</a><br><a class="trace-frames" data-frame-id="133" href="http://localhost:3030/events/2#">railties (5.0.2) lib/rails/rack/logger.rb:24:in `call'</a><br><a class="trace-frames" data-frame-id="134" href="http://localhost:3030/events/2#">sprockets-rails (3.2.0) lib/sprockets/rails/quiet_assets.rb:13:in `call'</a><br><a class="trace-frames" data-frame-id="135" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/request_id.rb:24:in `call'</a><br><a class="trace-frames" data-frame-id="136" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/method_override.rb:22:in `call'</a><br><a class="trace-frames" data-frame-id="137" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/runtime.rb:22:in `call'</a><br><a class="trace-frames" data-frame-id="138" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'</a><br><a class="trace-frames" data-frame-id="139" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/executor.rb:12:in `call'</a><br><a class="trace-frames" data-frame-id="140" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/static.rb:136:in `call'</a><br><a class="trace-frames" data-frame-id="141" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/sendfile.rb:111:in `call'</a><br><a class="trace-frames" data-frame-id="142" href="http://localhost:3030/events/2#">railties (5.0.2) lib/rails/engine.rb:522:in `call'</a><br><a class="trace-frames" data-frame-id="143" href="http://localhost:3030/events/2#">puma (3.8.2) lib/puma/configuration.rb:224:in `call'</a><br><a class="trace-frames" data-frame-id="144" href="http://localhost:3030/events/2#">puma (3.8.2) lib/puma/server.rb:600:in `handle_request'</a><br><a class="trace-frames" data-frame-id="145" href="http://localhost:3030/events/2#">puma (3.8.2) lib/puma/server.rb:435:in `process_client'</a><br><a class="trace-frames" data-frame-id="146" href="http://localhost:3030/events/2#">puma (3.8.2) lib/puma/server.rb:299:in `block in run'</a><br><a class="trace-frames" data-frame-id="147" href="http://localhost:3030/events/2#">puma (3.8.2) lib/puma/thread_pool.rb:120:in `block in spawn_thread'</a><br></code></pre>
    </div>
    <div id="Full-Trace" style="display: none;">
      <pre><code><a class="trace-frames" data-frame-id="0" href="http://localhost:3030/events/2#">/home/vagrant/.rbenv/versions/2.3.1/lib/ruby/2.3.0/uri/rfc3986_parser.rb:67:in `split'</a><br><a class="trace-frames" data-frame-id="1" href="http://localhost:3030/events/2#">/home/vagrant/.rbenv/versions/2.3.1/lib/ruby/2.3.0/uri/rfc3986_parser.rb:73:in `parse'</a><br><a class="trace-frames" data-frame-id="2" href="http://localhost:3030/events/2#">/home/vagrant/.rbenv/versions/2.3.1/lib/ruby/2.3.0/uri/common.rb:227:in `parse'</a><br><a class="trace-frames" data-frame-id="3" href="http://localhost:3030/events/2#">aws-sdk-core (2.9.9) lib/seahorse/client/plugins/endpoint.rb:28:in `after_initialize'</a><br><a class="trace-frames" data-frame-id="4" href="http://localhost:3030/events/2#">aws-sdk-core (2.9.9) lib/seahorse/client/base.rb:84:in `block in after_initialize'</a><br><a class="trace-frames" data-frame-id="5" href="http://localhost:3030/events/2#">aws-sdk-core (2.9.9) lib/seahorse/client/base.rb:83:in `each'</a><br><a class="trace-frames" data-frame-id="6" href="http://localhost:3030/events/2#">aws-sdk-core (2.9.9) lib/seahorse/client/base.rb:83:in `after_initialize'</a><br><a class="trace-frames" data-frame-id="7" href="http://localhost:3030/events/2#">aws-sdk-core (2.9.9) lib/seahorse/client/base.rb:21:in `initialize'</a><br><a class="trace-frames" data-frame-id="8" href="http://localhost:3030/events/2#">aws-sdk-core (2.9.9) lib/seahorse/client/base.rb:105:in `new'</a><br><a class="trace-frames" data-frame-id="9" href="http://localhost:3030/events/2#">aws-sdk-resources (2.9.9) lib/aws-sdk-resources/resource.rb:169:in `extract_client'</a><br><a class="trace-frames" data-frame-id="10" href="http://localhost:3030/events/2#">aws-sdk-resources (2.9.9) lib/aws-sdk-resources/resource.rb:15:in `initialize'</a><br><a class="trace-frames" data-frame-id="11" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/storage/s3.rb:247:in `new'</a><br><a class="trace-frames" data-frame-id="12" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/storage/s3.rb:247:in `obtain_s3_instance_for'</a><br><a class="trace-frames" data-frame-id="13" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/storage/s3.rb:241:in `s3_interface'</a><br><a class="trace-frames" data-frame-id="14" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/storage/s3.rb:251:in `s3_bucket'</a><br><a class="trace-frames" data-frame-id="15" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/storage/s3.rb:259:in `s3_object'</a><br><a class="trace-frames" data-frame-id="16" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/storage/s3.rb:300:in `exists?'</a><br><a class="trace-frames" data-frame-id="17" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/attachment.rb:560:in `block in queue_all_for_delete'</a><br><a class="trace-frames" data-frame-id="18" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/attachment.rb:559:in `map'</a><br><a class="trace-frames" data-frame-id="19" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/attachment.rb:559:in `queue_all_for_delete'</a><br><a class="trace-frames" data-frame-id="20" href="http://localhost:3030/events/2#">paperclip (5.0.0) lib/paperclip/has_attached_file.rb:93:in `block in add_active_record_callbacks'</a><br><a class="trace-frames" data-frame-id="21" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:396:in `instance_exec'</a><br><a class="trace-frames" data-frame-id="22" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:396:in `block in make_lambda'</a><br><a class="trace-frames" data-frame-id="23" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:169:in `block (2 levels) in halting'</a><br><a class="trace-frames" data-frame-id="24" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:770:in `block (2 levels) in deprecated_false_terminator'</a><br><a class="trace-frames" data-frame-id="25" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:769:in `catch'</a><br><a class="trace-frames" data-frame-id="26" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:769:in `block in deprecated_false_terminator'</a><br><a class="trace-frames" data-frame-id="27" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:170:in `block in halting'</a><br><a class="trace-frames" data-frame-id="28" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:454:in `block in call'</a><br><a class="trace-frames" data-frame-id="29" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:454:in `each'</a><br><a class="trace-frames" data-frame-id="30" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:454:in `call'</a><br><a class="trace-frames" data-frame-id="31" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:101:in `__run_callbacks__'</a><br><a class="trace-frames" data-frame-id="32" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:750:in `_run_destroy_callbacks'</a><br><a class="trace-frames" data-frame-id="33" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/callbacks.rb:283:in `destroy'</a><br><a class="trace-frames" data-frame-id="34" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:314:in `block in destroy'</a><br><a class="trace-frames" data-frame-id="35" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:395:in `block in with_transaction_returning_status'</a><br><a class="trace-frames" data-frame-id="36" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/connection_adapters/abstract/database_statements.rb:230:in `transaction'</a><br><a class="trace-frames" data-frame-id="37" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:211:in `transaction'</a><br><a class="trace-frames" data-frame-id="38" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:392:in `with_transaction_returning_status'</a><br><a class="trace-frames" data-frame-id="39" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:314:in `destroy'</a><br><a class="trace-frames" data-frame-id="40" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/persistence.rb:197:in `destroy!'</a><br><a class="trace-frames" data-frame-id="41" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/has_many_association.rb:120:in `each'</a><br><a class="trace-frames" data-frame-id="42" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/has_many_association.rb:120:in `delete_records'</a><br><a class="trace-frames" data-frame-id="43" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/collection_association.rb:561:in `remove_records'</a><br><a class="trace-frames" data-frame-id="44" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/collection_association.rb:554:in `block in delete_or_destroy'</a><br><a class="trace-frames" data-frame-id="45" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/collection_association.rb:207:in `block in transaction'</a><br><a class="trace-frames" data-frame-id="46" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/connection_adapters/abstract/database_statements.rb:230:in `transaction'</a><br><a class="trace-frames" data-frame-id="47" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:211:in `transaction'</a><br><a class="trace-frames" data-frame-id="48" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/collection_association.rb:206:in `transaction'</a><br><a class="trace-frames" data-frame-id="49" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/collection_association.rb:554:in `delete_or_destroy'</a><br><a class="trace-frames" data-frame-id="50" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/collection_association.rb:299:in `destroy'</a><br><a class="trace-frames" data-frame-id="51" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/collection_association.rb:247:in `destroy_all'</a><br><a class="trace-frames" data-frame-id="52" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/has_many_association.rb:34:in `handle_dependency'</a><br><a class="trace-frames" data-frame-id="53" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/associations/builder/association.rb:140:in `block in add_destroy_callbacks'</a><br><a class="trace-frames" data-frame-id="54" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:398:in `instance_exec'</a><br><a class="trace-frames" data-frame-id="55" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:398:in `block in make_lambda'</a><br><a class="trace-frames" data-frame-id="56" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:169:in `block (2 levels) in halting'</a><br><a class="trace-frames" data-frame-id="57" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:770:in `block (2 levels) in deprecated_false_terminator'</a><br><a class="trace-frames" data-frame-id="58" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:769:in `catch'</a><br><a class="trace-frames" data-frame-id="59" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:769:in `block in deprecated_false_terminator'</a><br><a class="trace-frames" data-frame-id="60" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:170:in `block in halting'</a><br><a class="trace-frames" data-frame-id="61" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:454:in `block in call'</a><br><a class="trace-frames" data-frame-id="62" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:454:in `each'</a><br><a class="trace-frames" data-frame-id="63" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:454:in `call'</a><br><a class="trace-frames" data-frame-id="64" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:101:in `__run_callbacks__'</a><br><a class="trace-frames" data-frame-id="65" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:750:in `_run_destroy_callbacks'</a><br><a class="trace-frames" data-frame-id="66" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/callbacks.rb:283:in `destroy'</a><br><a class="trace-frames" data-frame-id="67" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:314:in `block in destroy'</a><br><a class="trace-frames" data-frame-id="68" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:395:in `block in with_transaction_returning_status'</a><br><a class="trace-frames" data-frame-id="69" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/connection_adapters/abstract/database_statements.rb:232:in `block in transaction'</a><br><a class="trace-frames" data-frame-id="70" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/connection_adapters/abstract/transaction.rb:189:in `within_new_transaction'</a><br><a class="trace-frames" data-frame-id="71" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/connection_adapters/abstract/database_statements.rb:232:in `transaction'</a><br><a class="trace-frames" data-frame-id="72" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:211:in `transaction'</a><br><a class="trace-frames" data-frame-id="73" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:392:in `with_transaction_returning_status'</a><br><a class="trace-frames" data-frame-id="74" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/transactions.rb:314:in `destroy'</a><br><a class="trace-frames" data-frame-id="75" href="http://localhost:3030/events/2#">app/controllers/events_controller.rb:61:in `destroy'</a><br><a class="trace-frames" data-frame-id="76" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action'</a><br><a class="trace-frames" data-frame-id="77" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/abstract_controller/base.rb:188:in `process_action'</a><br><a class="trace-frames" data-frame-id="78" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal/rendering.rb:30:in `process_action'</a><br><a class="trace-frames" data-frame-id="79" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/abstract_controller/callbacks.rb:20:in `block in process_action'</a><br><a class="trace-frames" data-frame-id="80" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:126:in `call'</a><br><a class="trace-frames" data-frame-id="81" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:506:in `block (2 levels) in compile'</a><br><a class="trace-frames" data-frame-id="82" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:455:in `call'</a><br><a class="trace-frames" data-frame-id="83" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:101:in `__run_callbacks__'</a><br><a class="trace-frames" data-frame-id="84" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:750:in `_run_process_action_callbacks'</a><br><a class="trace-frames" data-frame-id="85" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:90:in `run_callbacks'</a><br><a class="trace-frames" data-frame-id="86" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/abstract_controller/callbacks.rb:19:in `process_action'</a><br><a class="trace-frames" data-frame-id="87" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal/rescue.rb:20:in `process_action'</a><br><a class="trace-frames" data-frame-id="88" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action'</a><br><a class="trace-frames" data-frame-id="89" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/notifications.rb:164:in `block in instrument'</a><br><a class="trace-frames" data-frame-id="90" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/notifications/instrumenter.rb:21:in `instrument'</a><br><a class="trace-frames" data-frame-id="91" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/notifications.rb:164:in `instrument'</a><br><a class="trace-frames" data-frame-id="92" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal/instrumentation.rb:30:in `process_action'</a><br><a class="trace-frames" data-frame-id="93" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal/params_wrapper.rb:248:in `process_action'</a><br><a class="trace-frames" data-frame-id="94" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/railties/controller_runtime.rb:18:in `process_action'</a><br><a class="trace-frames" data-frame-id="95" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/abstract_controller/base.rb:126:in `process'</a><br><a class="trace-frames" data-frame-id="96" href="http://localhost:3030/events/2#">actionview (5.0.2) lib/action_view/rendering.rb:30:in `process'</a><br><a class="trace-frames" data-frame-id="97" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal.rb:190:in `dispatch'</a><br><a class="trace-frames" data-frame-id="98" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_controller/metal.rb:262:in `dispatch'</a><br><a class="trace-frames" data-frame-id="99" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'</a><br><a class="trace-frames" data-frame-id="100" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/routing/route_set.rb:32:in `serve'</a><br><a class="trace-frames" data-frame-id="101" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/journey/router.rb:39:in `block in serve'</a><br><a class="trace-frames" data-frame-id="102" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/journey/router.rb:26:in `each'</a><br><a class="trace-frames" data-frame-id="103" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/journey/router.rb:26:in `serve'</a><br><a class="trace-frames" data-frame-id="104" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/routing/route_set.rb:725:in `call'</a><br><a class="trace-frames" data-frame-id="105" href="http://localhost:3030/events/2#">warden (1.2.7) lib/warden/manager.rb:36:in `block in call'</a><br><a class="trace-frames" data-frame-id="106" href="http://localhost:3030/events/2#">warden (1.2.7) lib/warden/manager.rb:35:in `catch'</a><br><a class="trace-frames" data-frame-id="107" href="http://localhost:3030/events/2#">warden (1.2.7) lib/warden/manager.rb:35:in `call'</a><br><a class="trace-frames" data-frame-id="108" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/etag.rb:25:in `call'</a><br><a class="trace-frames" data-frame-id="109" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/conditional_get.rb:38:in `call'</a><br><a class="trace-frames" data-frame-id="110" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/head.rb:12:in `call'</a><br><a class="trace-frames" data-frame-id="111" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/session/abstract/id.rb:222:in `context'</a><br><a class="trace-frames" data-frame-id="112" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/session/abstract/id.rb:216:in `call'</a><br><a class="trace-frames" data-frame-id="113" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/cookies.rb:613:in `call'</a><br><a class="trace-frames" data-frame-id="114" href="http://localhost:3030/events/2#">activerecord (5.0.2) lib/active_record/migration.rb:553:in `call'</a><br><a class="trace-frames" data-frame-id="115" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'</a><br><a class="trace-frames" data-frame-id="116" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:97:in `__run_callbacks__'</a><br><a class="trace-frames" data-frame-id="117" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'</a><br><a class="trace-frames" data-frame-id="118" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/callbacks.rb:90:in `run_callbacks'</a><br><a class="trace-frames" data-frame-id="119" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/callbacks.rb:36:in `call'</a><br><a class="trace-frames" data-frame-id="120" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/executor.rb:12:in `call'</a><br><a class="trace-frames" data-frame-id="121" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'</a><br><a class="trace-frames" data-frame-id="122" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'</a><br><a class="trace-frames" data-frame-id="123" href="http://localhost:3030/events/2#">web-console (3.5.0) lib/web_console/middleware.rb:135:in `call_app'</a><br><a class="trace-frames" data-frame-id="124" href="http://localhost:3030/events/2#">web-console (3.5.0) lib/web_console/middleware.rb:20:in `block in call'</a><br><a class="trace-frames" data-frame-id="125" href="http://localhost:3030/events/2#">web-console (3.5.0) lib/web_console/middleware.rb:18:in `catch'</a><br><a class="trace-frames" data-frame-id="126" href="http://localhost:3030/events/2#">web-console (3.5.0) lib/web_console/middleware.rb:18:in `call'</a><br><a class="trace-frames" data-frame-id="127" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'</a><br><a class="trace-frames" data-frame-id="128" href="http://localhost:3030/events/2#">railties (5.0.2) lib/rails/rack/logger.rb:36:in `call_app'</a><br><a class="trace-frames" data-frame-id="129" href="http://localhost:3030/events/2#">railties (5.0.2) lib/rails/rack/logger.rb:24:in `block in call'</a><br><a class="trace-frames" data-frame-id="130" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/tagged_logging.rb:69:in `block in tagged'</a><br><a class="trace-frames" data-frame-id="131" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/tagged_logging.rb:26:in `tagged'</a><br><a class="trace-frames" data-frame-id="132" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/tagged_logging.rb:69:in `tagged'</a><br><a class="trace-frames" data-frame-id="133" href="http://localhost:3030/events/2#">railties (5.0.2) lib/rails/rack/logger.rb:24:in `call'</a><br><a class="trace-frames" data-frame-id="134" href="http://localhost:3030/events/2#">sprockets-rails (3.2.0) lib/sprockets/rails/quiet_assets.rb:13:in `call'</a><br><a class="trace-frames" data-frame-id="135" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/request_id.rb:24:in `call'</a><br><a class="trace-frames" data-frame-id="136" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/method_override.rb:22:in `call'</a><br><a class="trace-frames" data-frame-id="137" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/runtime.rb:22:in `call'</a><br><a class="trace-frames" data-frame-id="138" href="http://localhost:3030/events/2#">activesupport (5.0.2) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'</a><br><a class="trace-frames" data-frame-id="139" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/executor.rb:12:in `call'</a><br><a class="trace-frames" data-frame-id="140" href="http://localhost:3030/events/2#">actionpack (5.0.2) lib/action_dispatch/middleware/static.rb:136:in `call'</a><br><a class="trace-frames" data-frame-id="141" href="http://localhost:3030/events/2#">rack (2.0.1) lib/rack/sendfile.rb:111:in `call'</a><br><a class="trace-frames" data-frame-id="142" href="http://localhost:3030/events/2#">railties (5.0.2) lib/rails/engine.rb:522:in `call'</a><br><a class="trace-frames" data-frame-id="143" href="http://localhost:3030/events/2#">puma (3.8.2) lib/puma/configuration.rb:224:in `call'</a><br><a class="trace-frames" data-frame-id="144" href="http://localhost:3030/events/2#">puma (3.8.2) lib/puma/server.rb:600:in `handle_request'</a><br><a class="trace-frames" data-frame-id="145" href="http://localhost:3030/events/2#">puma (3.8.2) lib/puma/server.rb:435:in `process_client'</a><br><a class="trace-frames" data-frame-id="146" href="http://localhost:3030/events/2#">puma (3.8.2) lib/puma/server.rb:299:in `block in run'</a><br><a class="trace-frames" data-frame-id="147" href="http://localhost:3030/events/2#">puma (3.8.2) lib/puma/thread_pool.rb:120:in `block in spawn_thread'</a><br></code></pre>
    </div>

  <script type="text/javascript">
    var traceFrames = document.getElementsByClassName('trace-frames');
    var selectedFrame, currentSource = document.getElementById('frame-source-0');

    // Add click listeners for all stack frames
    for (var i = 0; i < traceFrames.length; i++) {
      traceFrames[i].addEventListener('click', function(e) {
        e.preventDefault();
        var target = e.target;
        var frame_id = target.dataset.frameId;

        if (selectedFrame) {
          selectedFrame.className = selectedFrame.className.replace("selected", "");
        }

        target.className += " selected";
        selectedFrame = target;

        // Change the extracted source code
        changeSourceExtract(frame_id);
      });

      function changeSourceExtract(frame_id) {
        var el = document.getElementById('frame-source-' + frame_id);
        if (currentSource && el) {
          currentSource.className += " hidden";
          el.className = el.className.replace(" hidden", "");
          currentSource = el;
        }
      }
    }
  </script>
</div>

  
<h2 style="margin-top: 30px">Request</h2>
<p><b>Parameters</b>:</p> <pre>{"_method"=&gt;"delete", "authenticity_token"=&gt;"jxKqal/M4cVPLaSs/QQAilEeCBZ96MX3MIcT0dmhzSQjorrpv+xIQkJLXtF/pIS95f+X+A1rMn7KJ6xtgs/PGg==", "id"=&gt;"2"}
</pre>

<div class="details">
  <div class="summary"><a href="http://localhost:3030/events/2#" onclick="return toggleSessionDump()">Toggle session dump</a></div>
  <div id="session_dump" style="display:none"><pre>_csrf_token: "rLAQg+AgqYcNZvp9gqCEN7Thn+5wg/eJ+qC/vFtuAj4="
flash: {"discard"=&gt;[], "flashes"=&gt;{"notice"=&gt;"Saved..."}}
session_id: "0d564bf1d0e88d0fcf899fb7c1dd7f3b"
warden.user.user.key: [[1], "$2a$11$nUQLZ43NRMxYHKvudGy57u"]</pre></div>
</div>

<div class="details">
  <div class="summary"><a href="http://localhost:3030/events/2#" onclick="return toggleEnvDump()">Toggle env dump</a></div>
  <div id="env_dump" style="display:none"><pre>GATEWAY_INTERFACE: "CGI/1.2"
HTTP_ACCEPT: "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
HTTP_ACCEPT_ENCODING: "gzip, deflate, br"
HTTP_ACCEPT_LANGUAGE: "en-US,en;q=0.8,la;q=0.6"
HTTP_CACHE_CONTROL: "max-age=0"
HTTP_ORIGIN: "http://localhost:3030"
HTTP_VERSION: "HTTP/1.1"
ORIGINAL_SCRIPT_NAME: ""
REMOTE_ADDR: "10.0.2.2"
SERVER_NAME: "localhost"
SERVER_PROTOCOL: "HTTP/1.1"</pre></div>
</div>

<h2 style="margin-top: 30px">Response</h2>
<p><b>Headers</b>:</p> <pre>None</pre>

</div>




</body><span class="gr__tooltip"><span class="gr__tooltip-content"></span><i class="gr__tooltip-logo"></i><span class="gr__triangle"></span></span></html>